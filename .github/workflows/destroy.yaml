name: Destroy

on:
  workflow_dispatch:
# push:
#   branches:
#     - dev
#     - qa
#     - main

permissions:
  id-token: write  # Required for OIDC authentication
  contents: read   # Default permission for accessing the repo

jobs:
  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set auth for dev branch
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          # value must come from the audience fiele in the service account key file #
          workload_identity_provider: "projects/571690378641/locations/global/workloadIdentityPools/github-wif-pool/providers/github-provider-id"
          # value is the email address of the service account #
          service_account: "github-wif-sa@iaac-gcp-data-mgt.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Initialize Terraform
        run: |
          cd infra
          terraform init \
            -backend-config="bucket=${{ secrets.TF_VAR_BUCKET }}" \
            -backend-config="prefix=backend/terraform/state"

      - name: Destroy Terraform-managed infrastructure
        run: |
          cd infra
          terraform destroy -var-file="dev.tfvars" -var="github_run_id=${{ github.run_id }}" -auto-approve

  destroy-backend:
    name: Destroy Backend
    runs-on: ubuntu-latest
    needs: terraform-destroy
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set auth for dev branch
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          # value must come from the audience fiele in the service account key file #
          workload_identity_provider: "projects/571690378641/locations/global/workloadIdentityPools/github-wif-pool/providers/github-provider-id"
          # value is the email address of the service account #
          service_account: "github-wif-sa@iaac-gcp-data-mgt.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Check if GCS bucket exists
        id: check-bucket
        run: |
          if gsutil ls -b gs://iaac-gcp-data-mgt-terraform; then
            echo "Bucket exists."
            echo "bucket_exists=true" >> $GITHUB_ENV
          else
            echo "Bucket does not exist."
            echo "bucket_exists=false" >> $GITHUB_ENV
          fi

      - name: Delete GCS bucket
        if: env.bucket_exists == 'true'
        run: |
          gsutil rm -r gs://iaac-gcp-data-mgt-terraform

env:
  ZONE: europe-west6-b